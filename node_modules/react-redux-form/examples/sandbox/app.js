import React, { Component } from 'react'
import ReactDOM from 'react-dom'
import _ from 'lodash';

import { createStore, applyMiddleware, combineReducers, compose } from 'redux'
import { Provider, connect } from 'react-redux'
// import { Form, Control, Errors, combineForms, actions } from 'react-redux-form'
import thunk from 'redux-thunk';
import createLogger from 'redux-logger';

const logger = createLogger();

import {
  Field,
  Fieldset,
  Errors,
  Control,
  Form,
  LocalForm,
  combineForms,
  actions,
  formReducer,
  modeled,
  controls
} from 'react-redux-form';

const initialUserState = {
  firstName: '',
  lastName: 'hello',
};

const store = createStore(combineForms({
  user: initialUserState,
}), applyMiddleware(thunk, logger));

class UserForm extends Component {
  render() {
    return (
      <Form model="user" onSubmit={v => console.log(v)}>
        <div className="field">
          <label>First name:</label>
          <Control.text
            model="user.firstName"
            validateOn="blur"
            validators={{
              required: v => v.length
            }}
            />
          <Errors
            model="user.firstName"
            messages={{
              required: "Everyone has a first name."
            }}
            />
        </div>

        <div className="field">
          <label>Last name:</label>
          <Control.text model="user.lastName" format={s => s.toUpperCase()} />
        </div>

        <button type="submit">
          Submit (check console)
        </button>
      </Form>
    )
  }
}

class App extends React.Component {
  render() {
    return (
      <Provider store={store}>
        <UserForm />
      </Provider>
    );
  }
}

ReactDOM.render(<App />, document.getElementById('app'));
